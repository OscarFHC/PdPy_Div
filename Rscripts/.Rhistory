Vars <- read.table(file = "https://raw.githubusercontent.com/OscarFHC/PdPy_Div/master/data/sECS_Vars.csv", sep = ",",
header = TRUE, stringsAsFactors = FALSE, fill = TRUE)
Bac_Ampd_null <- read.table(#file = "D:/GDrive/Research/PdPy_Div/Anulls_PR2_4/Bac_Ampd_null_4_1.csv",
file = "https://raw.githubusercontent.com/OscarFHC/PdPy_Div/master/Anulls_PR2_4/Bac_Ampd_null_4.csv",
sep = ",", header = TRUE, stringsAsFactors = FALSE, fill = TRUE)
Bac_Ampd <- Bac_Ampd_null %>%
select(c(obs, Site)) %>%
mutate(Ampd_null_mean = apply(Bac_Ampd_null[, !names(Bac_Ampd_null) %in% c("obs", "Site")], 1, mean),
Ampd_null_sd = apply(Bac_Ampd_null[, !names(Bac_Ampd_null) %in% c("obs", "Site")], 1, sd),
Bac_Ampti = (obs - Ampd_null_mean) / Ampd_null_sd,
Bac_Ampti_p = pnorm(-abs(Bac_Ampti), 0, 1))
###############################################################################################
##### Loading packages ########################################################################
###############################################################################################
if (!require(tidyverse)) {
install.packages("tidyverse", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(tidyverse)
}else{library(tidyverse)}
if (!require(vegan)) {
install.packages("vegan", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(vegan)
}else{library(vegan)}
if (!require(mgcv)) {
install.packages("mgcv", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(mgcv)
}else{library(mgcv)}
if (!require(ape)) {
install.packages("ape", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(ape)
}else{library(ape)}
if (!require(parallel)) {
install.packages("vegan", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(parallel)
}else{library(parallel)}
if (!require(SpadeR)) {
install.packages("SpadeR", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(SpadeR)
}else{library(SpadeR)}
if (!require(iNEXT)) {
install.packages("iNEXT", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(iNEXT)
}else{library(iNEXT)}
if (!require(picante)) {
install.packages("picante", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(picante)
}else{library(picante)}
if (!require(geiger)) {
install.packages("geiger", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(geiger)
}else{library(geiger)}
if (!require(GUniFrac)) {
install.packages("GUniFrac", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(GUniFrac)
}else{library(GUniFrac)}
if (!require(phytools)) {
install.packages("phytools", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(phytools)
}else{library(phytools)}
if (!require(ecodist)) {
install.packages("ecodist", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(ecodist)
}else{library(ecodist)}
if (!require(ade4)) {
install.packages("ade4", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(ade4)
}else{library(ade4)}
# install.packages("iNEXT")
#
# ## install the latest version from github
# install.packages('devtools')
# library(devtools)
# install_github('JohnsonHsieh/iNEXT')
# library(iNEXT)
if (!require(lavaan)) {
install.packages("lavaan", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(lavaan)
}else{library(lavaan)}
if (!require(semTools)) {
install.packages("semTools", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(semTools)
}else{library(semTools)}
if (!require(psych)) {
install.packages("psych", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(psych)
}else{library(psych)}
if (!require(plspm)) {
install.packages("plspm", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(plspm)
}else{library(plspm)}
if (!require(nlme)) {
install.packages("nlme", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(nlme)
}else{library(nlme)}
if (!require(piecewiseSEM)) {
install.packages("piecewiseSEM", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(piecewiseSEM)
}else{library(piecewiseSEM)}
if (!require(brms)) {
install.packages("brms", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(brms)
}else{library(brms)}
if (!require(blavaan)) {
install.packages("blavaan", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(blavaan)
}else{library(blavaan)}
if (!require(rstanarm)) {
install.packages("rstanarm", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(rstanarm)
}else{library(rstanarm)}
library("rstan")
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
if (!require(loo)) {
install.packages("loo", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(loo)
}else{library(loo)}
if (!require(lmodel2)) {
install.packages("lmodel2", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(lmodel2)
}else{library(lmodel2)}
if (!require(abind)) {
install.packages("abind", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(abind)
}else{library(abind)}
if (!require(ggplot2)) {
install.packages("ggplot2", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(ggplot2)
}else{library(ggplot2)}
if (!require(viridis)) {
install.packages("viridis", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(viridis)
}else{library(viridis)}
if (!require(GGally)) {
install.packages("GGally", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(GGally)
}else{library(GGally)}
if (!require(cowplot)) {
install.packages("cowplot", dependencies=TRUE, repos = 'http://cran.us.r-project.org')
library(cowplot)
}else{library(cowplot)}
###############################################################################################
##### Loading packages ########################################################################
###############################################################################################
Bac_Ampd_null <- read.table(#file = "D:/GDrive/Research/PdPy_Div/Anulls_PR2_4/Bac_Ampd_null_4_1.csv",
file = "https://raw.githubusercontent.com/OscarFHC/PdPy_Div/master/Anulls_PR2_4/Bac_Ampd_null_4.csv",
sep = ",", header = TRUE, stringsAsFactors = FALSE, fill = TRUE)
Bac_Ampd <- Bac_Ampd_null %>%
select(c(obs, Site)) %>%
mutate(Ampd_null_mean = apply(Bac_Ampd_null[, !names(Bac_Ampd_null) %in% c("obs", "Site")], 1, mean),
Ampd_null_sd = apply(Bac_Ampd_null[, !names(Bac_Ampd_null) %in% c("obs", "Site")], 1, sd),
Bac_Ampti = (obs - Ampd_null_mean) / Ampd_null_sd,
Bac_Ampti_p = pnorm(-abs(Bac_Ampti), 0, 1))
View(Bac_Ampd_null)
###############################################################################################
##### Loading data ############################################################################
###############################################################################################
Bac_comm <- as.data.frame(t(read.table(
file = "https://raw.githubusercontent.com/OscarFHC/PdPy_Div/master/data/sECS_4/sECS_Bac_seqXst_PR2_4.csv",
sep = ",", header = TRUE, row.names = 1, stringsAsFactors = FALSE, fill = TRUE)))
Bac_ra_comm <- Bac_comm / rowSums(Bac_comm)
Bac_phylo<- read.tree(
file = "https://raw.githubusercontent.com/OscarFHC/PdPy_Div/master/data/sECS_4/sECS_Bac_treeNJ_PR2_4.tree")
HNF_comm <- as.data.frame(t(read.table(
file = "https://raw.githubusercontent.com/OscarFHC/PdPy_Div/master/data/sECS_4/sECS_HNF_seqXst_PR2_4.csv",
sep = ",", header = TRUE, row.names = 1, stringsAsFactors = FALSE, fill = TRUE)))
HNF_ra_comm <- HNF_comm / rowSums(HNF_comm)
HNF_phylo<- read.tree(file = "https://raw.githubusercontent.com/OscarFHC/PdPy_Div/master/data/sECS_4/sECS_HNF_treeNJ_PR2_4.tree")
Vars <- read.table(file = "https://raw.githubusercontent.com/OscarFHC/PdPy_Div/master/data/sECS_Vars.csv", sep = ",",
header = TRUE, stringsAsFactors = FALSE, fill = TRUE)
###############################################################################################
##### Loading data ############################################################################
###############################################################################################
###############################################################################################
##### Loading nulls ###########################################################################
###############################################################################################
Bac_Ampd_null <- read.table(#file = "D:/GDrive/Research/PdPy_Div/Anulls_PR2_4/Bac_Ampd_null_4_1.csv",
file = "https://raw.githubusercontent.com/OscarFHC/PdPy_Div/master/Anulls_PR2_4/Bac_Ampd_null_4.csv",
sep = ",", header = TRUE, stringsAsFactors = FALSE, fill = TRUE)
Bac_Ampd <- Bac_Ampd_null %>%
select(c(obs, Site)) %>%
mutate(Ampd_null_mean = apply(Bac_Ampd_null[, !names(Bac_Ampd_null) %in% c("obs", "Site")], 1, mean),
Ampd_null_sd = apply(Bac_Ampd_null[, !names(Bac_Ampd_null) %in% c("obs", "Site")], 1, sd),
Bac_Ampti = (obs - Ampd_null_mean) / Ampd_null_sd,
Bac_Ampti_p = pnorm(-abs(Bac_Ampti), 0, 1))
HNF_Ampd_null <- read.table(file = "https://raw.githubusercontent.com/OscarFHC/PdPy_Div/master/Anulls_PR2_4/HNF_Ampd_null_4.csv",
sep = ",", header = TRUE, stringsAsFactors = FALSE, fill = TRUE)
HNF_Ampd <- HNF_Ampd_null %>%
select(c(obs, Site)) %>%
mutate(Ampd_null_mean = apply(HNF_Ampd_null[, !names(HNF_Ampd_null) %in% c("obs", "Site")], 1, mean),
Ampd_null_sd = apply(HNF_Ampd_null[, !names(HNF_Ampd_null) %in% c("obs", "Site")], 1, sd),
HNF_Ampti = (obs - Ampd_null_mean) / Ampd_null_sd,
HNF_Ampti_p = pnorm(-abs(HNF_Ampti), 0, 1))
###############################################################################################
##### Loading nulls ###########################################################################
###############################################################################################
###############################################################################################
##### Preping data ############################################################################
###############################################################################################
Bac_A <- iNEXT(t(Bac_comm), q = 0, datatype = "abundance", size = max(colSums(Bac_comm)) + 100000)$AsyEst %>%
select(Site, Diversity, Estimator) %>%
spread(Diversity, Estimator) %>%
rename(Bac_q0 = "Species richness", Bac_q1 = "Shannon diversity", Bac_q2 = "Simpson diversity") %>%
mutate(Site = rownames(Bac_comm))
HNF_A <- iNEXT(t(HNF_comm), q = 0, datatype = "abundance", size = max(colSums(HNF_comm)))$AsyEst %>%
select(Site, Diversity, Estimator) %>%
spread(Diversity, Estimator) %>%
rename(HNF_q0 = "Species richness", HNF_q1 = "Shannon diversity", HNF_q2 = "Simpson diversity") %>%
mutate(Site = rownames(HNF_comm))
HNF_Bac_A <- Bac_A %>%
inner_join(Bac_Ampd, by = c("Site" = "Site")) %>%
inner_join(HNF_A, by = c("Site" = "Site")) %>%
inner_join(HNF_Ampd, by = c("Site" = "Site")) %>%
inner_join(Vars, by = c("Site" = "SampleID")) %>%
filter(!is.na(NF_Biom)) %>%
mutate(ln.Bac_q0 = log(Bac_q0),
ln.HNF_q0 = log(HNF_q0),
ln.Bac_q1 = log(Bac_q1),
ln.HNF_q1 = log(HNF_q1),
ln.Bac_q2 = log(Bac_q2),
ln.HNF_q2 = log(HNF_q2),
ln.Bac_Biom = log(Bac_Biom),
ln.HNF_Biom = log(HNF_Biom),
ln.Temp = log(Temp),
ln.Sal = log(Sal),
ln.PAR = log(PAR),
ln.NO2 = log(NO2 + 0.0001),
ln.NO3 = log(NO3 + 0.0001),
ln.DIN = log(DIN + 0.0001),
ln.PO3 = log(PO3 + 0.0001),
ln.Chla = log(Chla + 0.00001))
HNF_Bac_A <- as.data.frame(HNF_Bac_A)
View(HNF_Bac_A)
write.table(HNF_Bac_A, file = "D:/Dropbox/Research/PdPy_Div/data/ToBug/HNF_Bac_A.csv", sep = ",")
